/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
import type { PaymentMethod } from './PaymentMethod';
import type { PaymentRequestAction } from './PaymentRequestAction';
import type { PaymentRequestBasketItem } from './PaymentRequestBasketItem';
import type { PaymentRequestCaptureMethod } from './PaymentRequestCaptureMethod';
import type { PaymentRequestCardVerificationResults } from './PaymentRequestCardVerificationResults';
import type { PaymentRequestCountry } from './PaymentRequestCountry';
import type { PaymentRequestCurrency } from './PaymentRequestCurrency';
import type { PaymentRequestInitiator } from './PaymentRequestInitiator';
import type { PaymentRequestShippingInformation } from './PaymentRequestShippingInformation';
import type { PaymentRequestStatus } from './PaymentRequestStatus';
/**
 *
 * @export
 * @interface PaymentRequest
 */
export interface PaymentRequest {
    /**
     *
     * @type {string}
     * @memberof PaymentRequest
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof PaymentRequest
     */
    created: string;
    /**
     *
     * @type {string}
     * @memberof PaymentRequest
     */
    updated: string;
    /**
     *
     * @type {string}
     * @memberof PaymentRequest
     */
    referenceId: string;
    /**
     *
     * @type {string}
     * @memberof PaymentRequest
     */
    businessId: string;
    /**
     *
     * @type {string}
     * @memberof PaymentRequest
     */
    customerId?: string | null;
    /**
     *
     * @type {object}
     * @memberof PaymentRequest
     */
    customer?: object | null;
    /**
     *
     * @type {number}
     * @memberof PaymentRequest
     */
    amount?: number;
    /**
     *
     * @type {number}
     * @memberof PaymentRequest
     */
    minAmount?: number | null;
    /**
     *
     * @type {number}
     * @memberof PaymentRequest
     */
    maxAmount?: number | null;
    /**
     *
     * @type {PaymentRequestCountry}
     * @memberof PaymentRequest
     */
    country?: PaymentRequestCountry;
    /**
     *
     * @type {PaymentRequestCurrency}
     * @memberof PaymentRequest
     */
    currency: PaymentRequestCurrency;
    /**
     *
     * @type {PaymentMethod}
     * @memberof PaymentRequest
     */
    paymentMethod: PaymentMethod;
    /**
     *
     * @type {string}
     * @memberof PaymentRequest
     */
    description?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaymentRequest
     */
    failureCode?: string | null;
    /**
     *
     * @type {PaymentRequestCaptureMethod}
     * @memberof PaymentRequest
     */
    captureMethod?: PaymentRequestCaptureMethod | null;
    /**
     *
     * @type {PaymentRequestInitiator}
     * @memberof PaymentRequest
     */
    initiator?: PaymentRequestInitiator | null;
    /**
     *
     * @type {PaymentRequestCardVerificationResults}
     * @memberof PaymentRequest
     */
    cardVerificationResults?: PaymentRequestCardVerificationResults | null;
    /**
     *
     * @type {PaymentRequestStatus}
     * @memberof PaymentRequest
     */
    status: PaymentRequestStatus;
    /**
     *
     * @type {Array<PaymentRequestAction>}
     * @memberof PaymentRequest
     */
    actions?: Array<PaymentRequestAction>;
    /**
     *
     * @type {object}
     * @memberof PaymentRequest
     */
    metadata?: object | null;
    /**
     *
     * @type {PaymentRequestShippingInformation}
     * @memberof PaymentRequest
     */
    shippingInformation?: PaymentRequestShippingInformation | null;
    /**
     *
     * @type {Array<PaymentRequestBasketItem>}
     * @memberof PaymentRequest
     */
    items?: Array<PaymentRequestBasketItem> | null;
}
/**
 * Check if a given object implements the PaymentRequest interface.
 */
export declare function instanceOfPaymentRequest(value: object): boolean;
export declare function PaymentRequestFromJSON(json: any): PaymentRequest;
export declare function PaymentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentRequest;
export declare function PaymentRequestToJSON(value?: PaymentRequest | null): any;
