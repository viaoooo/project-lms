"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentRequestParametersToJSON = exports.PaymentRequestParametersFromJSONTyped = exports.PaymentRequestParametersFromJSON = exports.instanceOfPaymentRequestParameters = void 0;
const runtime_1 = require("../../runtime");
const PaymentMethodParameters_1 = require("./PaymentMethodParameters");
const PaymentRequestBasketItem_1 = require("./PaymentRequestBasketItem");
const PaymentRequestCaptureMethod_1 = require("./PaymentRequestCaptureMethod");
const PaymentRequestCurrency_1 = require("./PaymentRequestCurrency");
const PaymentRequestInitiator_1 = require("./PaymentRequestInitiator");
const PaymentRequestParametersChannelProperties_1 = require("./PaymentRequestParametersChannelProperties");
const PaymentRequestShippingInformation_1 = require("./PaymentRequestShippingInformation");
/**
 * Check if a given object implements the PaymentRequestParameters interface.
 */
function instanceOfPaymentRequestParameters(value) {
    let isInstance = true;
    isInstance = isInstance && "currency" in value;
    return isInstance;
}
exports.instanceOfPaymentRequestParameters = instanceOfPaymentRequestParameters;
function PaymentRequestParametersFromJSON(json) {
    return PaymentRequestParametersFromJSONTyped(json, false);
}
exports.PaymentRequestParametersFromJSON = PaymentRequestParametersFromJSON;
function PaymentRequestParametersFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'referenceId': !(0, runtime_1.exists)(json, 'reference_id') ? undefined : json['reference_id'],
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : json['amount'],
        'currency': (0, PaymentRequestCurrency_1.PaymentRequestCurrencyFromJSON)(json['currency']),
        'paymentMethod': !(0, runtime_1.exists)(json, 'payment_method') ? undefined : (0, PaymentMethodParameters_1.PaymentMethodParametersFromJSON)(json['payment_method']),
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'captureMethod': !(0, runtime_1.exists)(json, 'capture_method') ? undefined : (0, PaymentRequestCaptureMethod_1.PaymentRequestCaptureMethodFromJSON)(json['capture_method']),
        'initiator': !(0, runtime_1.exists)(json, 'initiator') ? undefined : (0, PaymentRequestInitiator_1.PaymentRequestInitiatorFromJSON)(json['initiator']),
        'paymentMethodId': !(0, runtime_1.exists)(json, 'payment_method_id') ? undefined : json['payment_method_id'],
        'channelProperties': !(0, runtime_1.exists)(json, 'channel_properties') ? undefined : (0, PaymentRequestParametersChannelProperties_1.PaymentRequestParametersChannelPropertiesFromJSON)(json['channel_properties']),
        'shippingInformation': !(0, runtime_1.exists)(json, 'shipping_information') ? undefined : (0, PaymentRequestShippingInformation_1.PaymentRequestShippingInformationFromJSON)(json['shipping_information']),
        'items': !(0, runtime_1.exists)(json, 'items') ? undefined : (json['items'] === null ? null : json['items'].map(PaymentRequestBasketItem_1.PaymentRequestBasketItemFromJSON)),
        'customerId': !(0, runtime_1.exists)(json, 'customer_id') ? undefined : json['customer_id'],
        'customer': !(0, runtime_1.exists)(json, 'customer') ? undefined : json['customer'],
        'metadata': !(0, runtime_1.exists)(json, 'metadata') ? undefined : json['metadata'],
    };
}
exports.PaymentRequestParametersFromJSONTyped = PaymentRequestParametersFromJSONTyped;
function PaymentRequestParametersToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'reference_id': value.referenceId,
        'amount': value.amount,
        'currency': (0, PaymentRequestCurrency_1.PaymentRequestCurrencyToJSON)(value.currency),
        'payment_method': (0, PaymentMethodParameters_1.PaymentMethodParametersToJSON)(value.paymentMethod),
        'description': value.description,
        'capture_method': (0, PaymentRequestCaptureMethod_1.PaymentRequestCaptureMethodToJSON)(value.captureMethod),
        'initiator': (0, PaymentRequestInitiator_1.PaymentRequestInitiatorToJSON)(value.initiator),
        'payment_method_id': value.paymentMethodId,
        'channel_properties': (0, PaymentRequestParametersChannelProperties_1.PaymentRequestParametersChannelPropertiesToJSON)(value.channelProperties),
        'shipping_information': (0, PaymentRequestShippingInformation_1.PaymentRequestShippingInformationToJSON)(value.shippingInformation),
        'items': value.items === undefined ? undefined : (value.items === null ? null : value.items.map(PaymentRequestBasketItem_1.PaymentRequestBasketItemToJSON)),
        'customer_id': value.customerId,
        'customer': value.customer,
        'metadata': value.metadata,
    };
}
exports.PaymentRequestParametersToJSON = PaymentRequestParametersToJSON;
