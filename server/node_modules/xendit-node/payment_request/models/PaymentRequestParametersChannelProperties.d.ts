/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
/**
 *
 * @export
 * @interface PaymentRequestParametersChannelProperties
 */
export interface PaymentRequestParametersChannelProperties {
    /**
     * URL where the end-customer is redirected if the authorization is successful
     * @type {string}
     * @memberof PaymentRequestParametersChannelProperties
     */
    successReturnUrl?: string;
    /**
     * URL where the end-customer is redirected if the authorization failed
     * @type {string}
     * @memberof PaymentRequestParametersChannelProperties
     */
    failureReturnUrl?: string;
    /**
     * URL where the end-customer is redirected if the authorization cancelled
     * @type {string}
     * @memberof PaymentRequestParametersChannelProperties
     */
    cancelReturnUrl?: string;
    /**
     * REDEEM_NONE will not use any point, REDEEM_ALL will use all available points before cash balance is used. For OVO and ShopeePay tokenized payment use only.
     * @type {string}
     * @memberof PaymentRequestParametersChannelProperties
     */
    redeemPoints?: string;
    /**
     * Toggle used to require end-customer to input undergo OTP validation before completing a payment. OTP will always be required for transactions greater than 1,000,000 IDR. For BRI tokenized payment use only.
     * @type {boolean}
     * @memberof PaymentRequestParametersChannelProperties
     */
    requireAuth?: boolean;
    /**
     * Tag for a Merchant ID that you want to associate this payment with. For merchants using their own MIDs to specify which MID they want to use
     * @type {string}
     * @memberof PaymentRequestParametersChannelProperties
     */
    merchantIdTag?: string;
    /**
     * Type of “credential-on-file” / “card-on-file” payment being made. Indicate that this payment uses a previously linked Payment Method for charging.
     * @type {string}
     * @memberof PaymentRequestParametersChannelProperties
     */
    cardonfileType?: string | null;
    /**
     * Three digit code written on the back of the card (usually called CVV/CVN).
     * @type {string}
     * @memberof PaymentRequestParametersChannelProperties
     */
    cvv?: string;
}
/**
 * Check if a given object implements the PaymentRequestParametersChannelProperties interface.
 */
export declare function instanceOfPaymentRequestParametersChannelProperties(value: object): boolean;
export declare function PaymentRequestParametersChannelPropertiesFromJSON(json: any): PaymentRequestParametersChannelProperties;
export declare function PaymentRequestParametersChannelPropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentRequestParametersChannelProperties;
export declare function PaymentRequestParametersChannelPropertiesToJSON(value?: PaymentRequestParametersChannelProperties | null): any;
