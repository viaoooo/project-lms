"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentCallbackToJSON = exports.PaymentCallbackFromJSONTyped = exports.PaymentCallbackFromJSON = exports.instanceOfPaymentCallback = void 0;
const runtime_1 = require("../../runtime");
const PaymentCallbackData_1 = require("./PaymentCallbackData");
/**
 * Check if a given object implements the PaymentCallback interface.
 */
function instanceOfPaymentCallback(value) {
    let isInstance = true;
    isInstance = isInstance && "event" in value;
    isInstance = isInstance && "businessId" in value;
    isInstance = isInstance && "created" in value;
    return isInstance;
}
exports.instanceOfPaymentCallback = instanceOfPaymentCallback;
function PaymentCallbackFromJSON(json) {
    return PaymentCallbackFromJSONTyped(json, false);
}
exports.PaymentCallbackFromJSON = PaymentCallbackFromJSON;
function PaymentCallbackFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'event': json['event'],
        'businessId': json['business_id'],
        'created': json['created'],
        'data': !(0, runtime_1.exists)(json, 'data') ? undefined : (0, PaymentCallbackData_1.PaymentCallbackDataFromJSON)(json['data']),
    };
}
exports.PaymentCallbackFromJSONTyped = PaymentCallbackFromJSONTyped;
function PaymentCallbackToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'event': value.event,
        'business_id': value.businessId,
        'created': value.created,
        'data': (0, PaymentCallbackData_1.PaymentCallbackDataToJSON)(value.data),
    };
}
exports.PaymentCallbackToJSON = PaymentCallbackToJSON;
