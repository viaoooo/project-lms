"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualAccountAllOfToJSON = exports.VirtualAccountAllOfFromJSONTyped = exports.VirtualAccountAllOfFromJSON = exports.instanceOfVirtualAccountAllOf = void 0;
const runtime_1 = require("../../runtime");
const VirtualAccountAlternativeDisplay_1 = require("./VirtualAccountAlternativeDisplay");
/**
 * Check if a given object implements the VirtualAccountAllOf interface.
 */
function instanceOfVirtualAccountAllOf(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfVirtualAccountAllOf = instanceOfVirtualAccountAllOf;
function VirtualAccountAllOfFromJSON(json) {
    return VirtualAccountAllOfFromJSONTyped(json, false);
}
exports.VirtualAccountAllOfFromJSON = VirtualAccountAllOfFromJSON;
function VirtualAccountAllOfFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'alternativeDisplays': !(0, runtime_1.exists)(json, 'alternative_displays') ? undefined : (json['alternative_displays'].map(VirtualAccountAlternativeDisplay_1.VirtualAccountAlternativeDisplayFromJSON)),
    };
}
exports.VirtualAccountAllOfFromJSONTyped = VirtualAccountAllOfFromJSONTyped;
function VirtualAccountAllOfToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'alternative_displays': value.alternativeDisplays === undefined ? undefined : (value.alternativeDisplays.map(VirtualAccountAlternativeDisplay_1.VirtualAccountAlternativeDisplayToJSON)),
    };
}
exports.VirtualAccountAllOfToJSON = VirtualAccountAllOfToJSON;
