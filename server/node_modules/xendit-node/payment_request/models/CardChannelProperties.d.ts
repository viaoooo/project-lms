/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
/**
 * Card Channel Properties
 * @export
 * @interface CardChannelProperties
 */
export interface CardChannelProperties {
    /**
     * To indicate whether to perform 3DS during the linking phase
     * @type {boolean}
     * @memberof CardChannelProperties
     */
    skipThreeDSecure?: boolean | null;
    /**
     * URL where the end-customer is redirected if the authorization is successful
     * @type {string}
     * @memberof CardChannelProperties
     */
    successReturnUrl?: string | null;
    /**
     * URL where the end-customer is redirected if the authorization failed
     * @type {string}
     * @memberof CardChannelProperties
     */
    failureReturnUrl?: string | null;
    /**
     * Type of “credential-on-file” / “card-on-file” payment being made. Indicate that this payment uses a previously linked Payment Method for charging.
     * @type {string}
     * @memberof CardChannelProperties
     */
    cardonfileType?: string | null;
    /**
     * Tag for a Merchant ID that you want to associate this payment with. For merchants using their own MIDs to specify which MID they want to use
     * @type {string}
     * @memberof CardChannelProperties
     */
    merchantIdTag?: string;
    /**
     *
     * @type {Date}
     * @memberof CardChannelProperties
     */
    expiresAt?: Date;
}
/**
 * Check if a given object implements the CardChannelProperties interface.
 */
export declare function instanceOfCardChannelProperties(value: object): boolean;
export declare function CardChannelPropertiesFromJSON(json: any): CardChannelProperties;
export declare function CardChannelPropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CardChannelProperties;
export declare function CardChannelPropertiesToJSON(value?: CardChannelProperties | null): any;
