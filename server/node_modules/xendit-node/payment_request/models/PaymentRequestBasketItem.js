"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentRequestBasketItemToJSON = exports.PaymentRequestBasketItemFromJSONTyped = exports.PaymentRequestBasketItemFromJSON = exports.instanceOfPaymentRequestBasketItem = void 0;
const runtime_1 = require("../../runtime");
/**
 * Check if a given object implements the PaymentRequestBasketItem interface.
 */
function instanceOfPaymentRequestBasketItem(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "currency" in value;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "price" in value;
    return isInstance;
}
exports.instanceOfPaymentRequestBasketItem = instanceOfPaymentRequestBasketItem;
function PaymentRequestBasketItemFromJSON(json) {
    return PaymentRequestBasketItemFromJSONTyped(json, false);
}
exports.PaymentRequestBasketItemFromJSON = PaymentRequestBasketItemFromJSON;
function PaymentRequestBasketItemFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'referenceId': !(0, runtime_1.exists)(json, 'reference_id') ? undefined : json['reference_id'],
        'name': json['name'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'category': json['category'],
        'subCategory': !(0, runtime_1.exists)(json, 'sub_category') ? undefined : json['sub_category'],
        'currency': json['currency'],
        'quantity': json['quantity'],
        'price': json['price'],
        'payerChargedCurrency': !(0, runtime_1.exists)(json, 'payer_charged_currency') ? undefined : json['payer_charged_currency'],
        'payerChargedPrice': !(0, runtime_1.exists)(json, 'payer_charged_price') ? undefined : json['payer_charged_price'],
        'url': !(0, runtime_1.exists)(json, 'url') ? undefined : json['url'],
        'metadata': !(0, runtime_1.exists)(json, 'metadata') ? undefined : json['metadata'],
    };
}
exports.PaymentRequestBasketItemFromJSONTyped = PaymentRequestBasketItemFromJSONTyped;
function PaymentRequestBasketItemToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'reference_id': value.referenceId,
        'name': value.name,
        'description': value.description,
        'type': value.type,
        'category': value.category,
        'sub_category': value.subCategory,
        'currency': value.currency,
        'quantity': value.quantity,
        'price': value.price,
        'payer_charged_currency': value.payerChargedCurrency,
        'payer_charged_price': value.payerChargedPrice,
        'url': value.url,
        'metadata': value.metadata,
    };
}
exports.PaymentRequestBasketItemToJSON = PaymentRequestBasketItemToJSON;
