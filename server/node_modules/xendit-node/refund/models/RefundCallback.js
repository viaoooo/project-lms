"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RefundCallbackToJSON = exports.RefundCallbackFromJSONTyped = exports.RefundCallbackFromJSON = exports.instanceOfRefundCallback = void 0;
const runtime_1 = require("../../runtime");
const RefundCallbackData_1 = require("./RefundCallbackData");
/**
 * Check if a given object implements the RefundCallback interface.
 */
function instanceOfRefundCallback(value) {
    let isInstance = true;
    isInstance = isInstance && "event" in value;
    isInstance = isInstance && "businessId" in value;
    isInstance = isInstance && "created" in value;
    return isInstance;
}
exports.instanceOfRefundCallback = instanceOfRefundCallback;
function RefundCallbackFromJSON(json) {
    return RefundCallbackFromJSONTyped(json, false);
}
exports.RefundCallbackFromJSON = RefundCallbackFromJSON;
function RefundCallbackFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'event': json['event'],
        'businessId': json['business_id'],
        'created': json['created'],
        'data': !(0, runtime_1.exists)(json, 'data') ? undefined : (0, RefundCallbackData_1.RefundCallbackDataFromJSON)(json['data']),
    };
}
exports.RefundCallbackFromJSONTyped = RefundCallbackFromJSONTyped;
function RefundCallbackToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'event': value.event,
        'business_id': value.businessId,
        'created': value.created,
        'data': (0, RefundCallbackData_1.RefundCallbackDataToJSON)(value.data),
    };
}
exports.RefundCallbackToJSON = RefundCallbackToJSON;
