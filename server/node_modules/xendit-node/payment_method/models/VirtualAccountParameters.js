"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualAccountParametersToJSON = exports.VirtualAccountParametersFromJSONTyped = exports.VirtualAccountParametersFromJSON = exports.instanceOfVirtualAccountParameters = exports.VirtualAccountParametersAlternativeDisplayTypesEnum = void 0;
const runtime_1 = require("../../runtime");
const VirtualAccountChannelCode_1 = require("./VirtualAccountChannelCode");
const VirtualAccountChannelProperties_1 = require("./VirtualAccountChannelProperties");
/**
 * @export
 */
exports.VirtualAccountParametersAlternativeDisplayTypesEnum = {
    QrString: 'QR_STRING'
};
/**
 * Check if a given object implements the VirtualAccountParameters interface.
 */
function instanceOfVirtualAccountParameters(value) {
    let isInstance = true;
    isInstance = isInstance && "channelCode" in value;
    isInstance = isInstance && "channelProperties" in value;
    return isInstance;
}
exports.instanceOfVirtualAccountParameters = instanceOfVirtualAccountParameters;
function VirtualAccountParametersFromJSON(json) {
    return VirtualAccountParametersFromJSONTyped(json, false);
}
exports.VirtualAccountParametersFromJSON = VirtualAccountParametersFromJSON;
function VirtualAccountParametersFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : json['amount'],
        'minAmount': !(0, runtime_1.exists)(json, 'min_amount') ? undefined : json['min_amount'],
        'maxAmount': !(0, runtime_1.exists)(json, 'max_amount') ? undefined : json['max_amount'],
        'currency': !(0, runtime_1.exists)(json, 'currency') ? undefined : json['currency'],
        'channelCode': (0, VirtualAccountChannelCode_1.VirtualAccountChannelCodeFromJSON)(json['channel_code']),
        'channelProperties': (0, VirtualAccountChannelProperties_1.VirtualAccountChannelPropertiesFromJSON)(json['channel_properties']),
        'alternativeDisplayTypes': !(0, runtime_1.exists)(json, 'alternative_display_types') ? undefined : json['alternative_display_types'],
    };
}
exports.VirtualAccountParametersFromJSONTyped = VirtualAccountParametersFromJSONTyped;
function VirtualAccountParametersToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': value.amount,
        'min_amount': value.minAmount,
        'max_amount': value.maxAmount,
        'currency': value.currency,
        'channel_code': (0, VirtualAccountChannelCode_1.VirtualAccountChannelCodeToJSON)(value.channelCode),
        'channel_properties': (0, VirtualAccountChannelProperties_1.VirtualAccountChannelPropertiesToJSON)(value.channelProperties),
        'alternative_display_types': value.alternativeDisplayTypes,
    };
}
exports.VirtualAccountParametersToJSON = VirtualAccountParametersToJSON;
