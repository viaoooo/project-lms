/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
import type { BillingInformation } from './BillingInformation';
import type { CardParameters } from './CardParameters';
import type { DirectDebitParameters } from './DirectDebitParameters';
import type { EWalletParameters } from './EWalletParameters';
import type { OverTheCounterParameters } from './OverTheCounterParameters';
import type { PaymentMethodReusability } from './PaymentMethodReusability';
import type { PaymentMethodType } from './PaymentMethodType';
import type { QRCodeParameters } from './QRCodeParameters';
import type { VirtualAccountParameters } from './VirtualAccountParameters';
/**
 *
 * @export
 * @interface PaymentMethodParameters
 */
export interface PaymentMethodParameters {
    /**
     *
     * @type {PaymentMethodType}
     * @memberof PaymentMethodParameters
     */
    type: PaymentMethodType;
    /**
     *
     * @type {string}
     * @memberof PaymentMethodParameters
     */
    country?: string | null;
    /**
     *
     * @type {PaymentMethodReusability}
     * @memberof PaymentMethodParameters
     */
    reusability: PaymentMethodReusability;
    /**
     *
     * @type {string}
     * @memberof PaymentMethodParameters
     */
    customerId?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaymentMethodParameters
     */
    referenceId?: string;
    /**
     *
     * @type {string}
     * @memberof PaymentMethodParameters
     */
    description?: string | null;
    /**
     *
     * @type {CardParameters}
     * @memberof PaymentMethodParameters
     */
    card?: CardParameters;
    /**
     *
     * @type {DirectDebitParameters}
     * @memberof PaymentMethodParameters
     */
    directDebit?: DirectDebitParameters;
    /**
     *
     * @type {EWalletParameters}
     * @memberof PaymentMethodParameters
     */
    ewallet?: EWalletParameters;
    /**
     *
     * @type {OverTheCounterParameters}
     * @memberof PaymentMethodParameters
     */
    overTheCounter?: OverTheCounterParameters;
    /**
     *
     * @type {VirtualAccountParameters}
     * @memberof PaymentMethodParameters
     */
    virtualAccount?: VirtualAccountParameters;
    /**
     *
     * @type {QRCodeParameters}
     * @memberof PaymentMethodParameters
     */
    qrCode?: QRCodeParameters;
    /**
     *
     * @type {object}
     * @memberof PaymentMethodParameters
     */
    metadata?: object | null;
    /**
     *
     * @type {BillingInformation}
     * @memberof PaymentMethodParameters
     */
    billingInformation?: BillingInformation | null;
}
/**
 * Check if a given object implements the PaymentMethodParameters interface.
 */
export declare function instanceOfPaymentMethodParameters(value: object): boolean;
export declare function PaymentMethodParametersFromJSON(json: any): PaymentMethodParameters;
export declare function PaymentMethodParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentMethodParameters;
export declare function PaymentMethodParametersToJSON(value?: PaymentMethodParameters | null): any;
