"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentMethodParametersToJSON = exports.PaymentMethodParametersFromJSONTyped = exports.PaymentMethodParametersFromJSON = exports.instanceOfPaymentMethodParameters = void 0;
const runtime_1 = require("../../runtime");
const BillingInformation_1 = require("./BillingInformation");
const CardParameters_1 = require("./CardParameters");
const DirectDebitParameters_1 = require("./DirectDebitParameters");
const EWalletParameters_1 = require("./EWalletParameters");
const OverTheCounterParameters_1 = require("./OverTheCounterParameters");
const PaymentMethodReusability_1 = require("./PaymentMethodReusability");
const PaymentMethodType_1 = require("./PaymentMethodType");
const QRCodeParameters_1 = require("./QRCodeParameters");
const VirtualAccountParameters_1 = require("./VirtualAccountParameters");
/**
 * Check if a given object implements the PaymentMethodParameters interface.
 */
function instanceOfPaymentMethodParameters(value) {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "reusability" in value;
    return isInstance;
}
exports.instanceOfPaymentMethodParameters = instanceOfPaymentMethodParameters;
function PaymentMethodParametersFromJSON(json) {
    return PaymentMethodParametersFromJSONTyped(json, false);
}
exports.PaymentMethodParametersFromJSON = PaymentMethodParametersFromJSON;
function PaymentMethodParametersFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'type': (0, PaymentMethodType_1.PaymentMethodTypeFromJSON)(json['type']),
        'country': !(0, runtime_1.exists)(json, 'country') ? undefined : json['country'],
        'reusability': (0, PaymentMethodReusability_1.PaymentMethodReusabilityFromJSON)(json['reusability']),
        'customerId': !(0, runtime_1.exists)(json, 'customer_id') ? undefined : json['customer_id'],
        'referenceId': !(0, runtime_1.exists)(json, 'reference_id') ? undefined : json['reference_id'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'card': !(0, runtime_1.exists)(json, 'card') ? undefined : (0, CardParameters_1.CardParametersFromJSON)(json['card']),
        'directDebit': !(0, runtime_1.exists)(json, 'direct_debit') ? undefined : (0, DirectDebitParameters_1.DirectDebitParametersFromJSON)(json['direct_debit']),
        'ewallet': !(0, runtime_1.exists)(json, 'ewallet') ? undefined : (0, EWalletParameters_1.EWalletParametersFromJSON)(json['ewallet']),
        'overTheCounter': !(0, runtime_1.exists)(json, 'over_the_counter') ? undefined : (0, OverTheCounterParameters_1.OverTheCounterParametersFromJSON)(json['over_the_counter']),
        'virtualAccount': !(0, runtime_1.exists)(json, 'virtual_account') ? undefined : (0, VirtualAccountParameters_1.VirtualAccountParametersFromJSON)(json['virtual_account']),
        'qrCode': !(0, runtime_1.exists)(json, 'qr_code') ? undefined : (0, QRCodeParameters_1.QRCodeParametersFromJSON)(json['qr_code']),
        'metadata': !(0, runtime_1.exists)(json, 'metadata') ? undefined : json['metadata'],
        'billingInformation': !(0, runtime_1.exists)(json, 'billing_information') ? undefined : (0, BillingInformation_1.BillingInformationFromJSON)(json['billing_information']),
    };
}
exports.PaymentMethodParametersFromJSONTyped = PaymentMethodParametersFromJSONTyped;
function PaymentMethodParametersToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'type': (0, PaymentMethodType_1.PaymentMethodTypeToJSON)(value.type),
        'country': value.country,
        'reusability': (0, PaymentMethodReusability_1.PaymentMethodReusabilityToJSON)(value.reusability),
        'customer_id': value.customerId,
        'reference_id': value.referenceId,
        'description': value.description,
        'card': (0, CardParameters_1.CardParametersToJSON)(value.card),
        'direct_debit': (0, DirectDebitParameters_1.DirectDebitParametersToJSON)(value.directDebit),
        'ewallet': (0, EWalletParameters_1.EWalletParametersToJSON)(value.ewallet),
        'over_the_counter': (0, OverTheCounterParameters_1.OverTheCounterParametersToJSON)(value.overTheCounter),
        'virtual_account': (0, VirtualAccountParameters_1.VirtualAccountParametersToJSON)(value.virtualAccount),
        'qr_code': (0, QRCodeParameters_1.QRCodeParametersToJSON)(value.qrCode),
        'metadata': value.metadata,
        'billing_information': (0, BillingInformation_1.BillingInformationToJSON)(value.billingInformation),
    };
}
exports.PaymentMethodParametersToJSON = PaymentMethodParametersToJSON;
