"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentMethodActionToJSON = exports.PaymentMethodActionFromJSONTyped = exports.PaymentMethodActionFromJSON = exports.instanceOfPaymentMethodAction = void 0;
const runtime_1 = require("../../runtime");
/**
 * Check if a given object implements the PaymentMethodAction interface.
 */
function instanceOfPaymentMethodAction(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPaymentMethodAction = instanceOfPaymentMethodAction;
function PaymentMethodActionFromJSON(json) {
    return PaymentMethodActionFromJSONTyped(json, false);
}
exports.PaymentMethodActionFromJSON = PaymentMethodActionFromJSON;
function PaymentMethodActionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'action': !(0, runtime_1.exists)(json, 'action') ? undefined : json['action'],
        'method': !(0, runtime_1.exists)(json, 'method') ? undefined : json['method'],
        'url': !(0, runtime_1.exists)(json, 'url') ? undefined : json['url'],
        'urlType': !(0, runtime_1.exists)(json, 'url_type') ? undefined : json['url_type'],
    };
}
exports.PaymentMethodActionFromJSONTyped = PaymentMethodActionFromJSONTyped;
function PaymentMethodActionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'action': value.action,
        'method': value.method,
        'url': value.url,
        'url_type': value.urlType,
    };
}
exports.PaymentMethodActionToJSON = PaymentMethodActionToJSON;
