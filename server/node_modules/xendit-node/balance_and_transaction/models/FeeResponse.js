"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeeResponseToJSON = exports.FeeResponseFromJSONTyped = exports.FeeResponseFromJSON = exports.instanceOfFeeResponse = exports.FeeResponseStatusEnum = void 0;
const runtime_1 = require("../../runtime");
/**
 * @export
 */
exports.FeeResponseStatusEnum = {
    Pending: 'PENDING',
    Completed: 'COMPLETED',
    Canceled: 'CANCELED',
    Reversed: 'REVERSED',
    NotApplicable: 'NOT_APPLICABLE'
};
/**
 * Check if a given object implements the FeeResponse interface.
 */
function instanceOfFeeResponse(value) {
    let isInstance = true;
    isInstance = isInstance && "xenditFee" in value;
    isInstance = isInstance && "valueAddedTax" in value;
    return isInstance;
}
exports.instanceOfFeeResponse = instanceOfFeeResponse;
function FeeResponseFromJSON(json) {
    return FeeResponseFromJSONTyped(json, false);
}
exports.FeeResponseFromJSON = FeeResponseFromJSON;
function FeeResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'xenditFee': json['xendit_fee'],
        'valueAddedTax': json['value_added_tax'],
        'xenditWithholdingTax': !(0, runtime_1.exists)(json, 'xendit_withholding_tax') ? undefined : json['xendit_withholding_tax'],
        'thirdPartyWithholdingTax': !(0, runtime_1.exists)(json, 'third_party_withholding_tax') ? undefined : json['third_party_withholding_tax'],
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : json['status'],
    };
}
exports.FeeResponseFromJSONTyped = FeeResponseFromJSONTyped;
function FeeResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'xendit_fee': value.xenditFee,
        'value_added_tax': value.valueAddedTax,
        'xendit_withholding_tax': value.xenditWithholdingTax,
        'third_party_withholding_tax': value.thirdPartyWithholdingTax,
        'status': value.status,
    };
}
exports.FeeResponseToJSON = FeeResponseToJSON;
