"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetBalanceAccountTypeEnum = exports.BalanceApi = void 0;
const runtime = require("../../runtime");
const models_1 = require("../models");
/**
 *
 */
class BalanceApi extends runtime.BaseAPI {
    constructor({ secretKey, xenditURL }) {
        const conf = new runtime.Configuration({
            basePath: xenditURL || 'https://api.xendit.co'
        });
        super(conf);
        this.secretKey = "";
        this.xenditURL = "";
        this.secretKey = secretKey;
    }
    /**
     * Retrieves balance for your business, defaults to CASH type
     * Retrieves balances for a business, default to CASH type
     */
    async getBalanceRaw(requestParameters) {
        const queryParameters = {};
        if (requestParameters.accountType !== undefined) {
            queryParameters['account_type'] = requestParameters.accountType;
        }
        if (requestParameters.currency !== undefined) {
            queryParameters['currency'] = requestParameters.currency;
        }
        if (requestParameters.atTimestamp !== undefined) {
            queryParameters['at_timestamp'] = requestParameters.atTimestamp.toISOString();
        }
        const headerParameters = {};
        headerParameters["Authorization"] = "Basic " + btoa(this.secretKey + ":");
        if (requestParameters.forUserId !== undefined && requestParameters.forUserId !== null) {
            headerParameters['for-user-id'] = String(requestParameters.forUserId);
        }
        const response = await this.request({
            path: `/balance`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.BalanceFromJSON)(jsonValue));
    }
    /**
     * Retrieves balance for your business, defaults to CASH type
     * Retrieves balances for a business, default to CASH type
     */
    async getBalance(requestParameters = {}) {
        const response = await this.getBalanceRaw(requestParameters);
        return await response.value();
    }
}
exports.BalanceApi = BalanceApi;
/**
 * @export
 */
exports.GetBalanceAccountTypeEnum = {
    Cash: 'CASH',
    Holding: 'HOLDING',
    Tax: 'TAX'
};
