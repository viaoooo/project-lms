/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
/**
 * An error object used to indicate unauthorized access to an invoice-related resource.
 * @export
 * @interface UnauthorizedError
 */
export interface UnauthorizedError {
    /**
     * The specific error code associated with the unauthorized access.
     * @type {string}
     * @memberof UnauthorizedError
     */
    errorCode: UnauthorizedErrorErrorCodeEnum;
    /**
     * A human-readable error message providing additional context about the unauthorized access.
     * @type {string}
     * @memberof UnauthorizedError
     */
    message: string;
}
/**
 * @export
 */
export declare const UnauthorizedErrorErrorCodeEnum: {
    readonly InvalidApiKey: "INVALID_API_KEY";
};
export type UnauthorizedErrorErrorCodeEnum = typeof UnauthorizedErrorErrorCodeEnum[keyof typeof UnauthorizedErrorErrorCodeEnum];
/**
 * Check if a given object implements the UnauthorizedError interface.
 */
export declare function instanceOfUnauthorizedError(value: object): boolean;
export declare function UnauthorizedErrorFromJSON(json: any): UnauthorizedError;
export declare function UnauthorizedErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnauthorizedError;
export declare function UnauthorizedErrorToJSON(value?: UnauthorizedError | null): any;
