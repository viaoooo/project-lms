/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
import type { InvoiceCallbackItem } from './InvoiceCallbackItem';
import type { InvoiceFee } from './InvoiceFee';
import type { PaymentDetails } from './PaymentDetails';
/**
 * Invoice Callback Object
 * @export
 * @interface InvoiceCallback
 */
export interface InvoiceCallback {
    /**
     * An invoice ID generated by Xendit
     * @type {string}
     * @memberof InvoiceCallback
     */
    id: string;
    /**
     * ID of your choice (typically the unique identifier of an invoice in your system)
     * @type {string}
     * @memberof InvoiceCallback
     */
    externalId: string;
    /**
     * Xendit Business ID
     * @type {string}
     * @memberof InvoiceCallback
     */
    userId: string;
    /**
     * The status of the invoice.
     * @type {string}
     * @memberof InvoiceCallback
     */
    status: string;
    /**
     * The name of company or website
     * @type {string}
     * @memberof InvoiceCallback
     */
    merchantName: string;
    /**
     * Nominal amount for the invoice
     * @type {number}
     * @memberof InvoiceCallback
     */
    amount: number;
    /**
     * Email of the payer
     * @type {string}
     * @memberof InvoiceCallback
     */
    payerEmail?: string;
    /**
     * Description for the invoice
     * @type {string}
     * @memberof InvoiceCallback
     */
    description?: string;
    /**
     * Total amount paid for the invoice
     * @type {number}
     * @memberof InvoiceCallback
     */
    paidAmount?: number;
    /**
     * The date and time when the invoice was created.
     * @type {string}
     * @memberof InvoiceCallback
     */
    created: string;
    /**
     * The date and time when the invoice was last updated.
     * @type {string}
     * @memberof InvoiceCallback
     */
    updated: string;
    /**
     * The currency of the invoice.
     * @type {string}
     * @memberof InvoiceCallback
     */
    currency: string;
    /**
     * The date and time when the invoice was paid.
     * @type {string}
     * @memberof InvoiceCallback
     */
    paidAt?: string;
    /**
     * The payment method used for the invoice.
     * @type {string}
     * @memberof InvoiceCallback
     */
    paymentMethod?: string;
    /**
     * The payment channel.
     * @type {string}
     * @memberof InvoiceCallback
     */
    paymentChannel?: string;
    /**
     * The payment destination.
     * @type {string}
     * @memberof InvoiceCallback
     */
    paymentDestination?: string;
    /**
     *
     * @type {PaymentDetails}
     * @memberof InvoiceCallback
     */
    paymentDetails?: PaymentDetails;
    /**
     * The ID of the payment.
     * @type {string}
     * @memberof InvoiceCallback
     */
    paymentId?: string;
    /**
     * The URL to redirect to on successful payment.
     * @type {string}
     * @memberof InvoiceCallback
     */
    successRedirectUrl?: string;
    /**
     * The URL to redirect to on payment failure.
     * @type {string}
     * @memberof InvoiceCallback
     */
    failureRedirectUrl?: string;
    /**
     * The ID associated with a credit card charge (if applicable).
     * @type {string}
     * @memberof InvoiceCallback
     */
    creditCardChargeId?: string;
    /**
     *
     * @type {Array<InvoiceCallbackItem>}
     * @memberof InvoiceCallback
     */
    items?: Array<InvoiceCallbackItem>;
    /**
     * An array of fees associated with the invoice.
     * @type {Array<InvoiceFee>}
     * @memberof InvoiceCallback
     */
    fees?: Array<InvoiceFee>;
    /**
     * Indicates whether credit card authentication is required.
     * @type {boolean}
     * @memberof InvoiceCallback
     */
    shouldAuthenticateCreditCard?: boolean;
    /**
     * The bank code for the bank details.
     * @type {string}
     * @memberof InvoiceCallback
     */
    bankCode?: string;
    /**
     * The type of eWallet.
     * @type {string}
     * @memberof InvoiceCallback
     */
    ewalletType?: string;
    /**
     * The on-demand link.
     * @type {string}
     * @memberof InvoiceCallback
     */
    onDemandLink?: string;
    /**
     * The ID of the recurring payment.
     * @type {string}
     * @memberof InvoiceCallback
     */
    recurringPaymentId?: string;
}
/**
 * Check if a given object implements the InvoiceCallback interface.
 */
export declare function instanceOfInvoiceCallback(value: object): boolean;
export declare function InvoiceCallbackFromJSON(json: any): InvoiceCallback;
export declare function InvoiceCallbackFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceCallback;
export declare function InvoiceCallbackToJSON(value?: InvoiceCallback | null): any;
