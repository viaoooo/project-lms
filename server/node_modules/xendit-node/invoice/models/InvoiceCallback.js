"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvoiceCallbackToJSON = exports.InvoiceCallbackFromJSONTyped = exports.InvoiceCallbackFromJSON = exports.instanceOfInvoiceCallback = void 0;
const runtime_1 = require("../../runtime");
const InvoiceCallbackItem_1 = require("./InvoiceCallbackItem");
const InvoiceFee_1 = require("./InvoiceFee");
const PaymentDetails_1 = require("./PaymentDetails");
/**
 * Check if a given object implements the InvoiceCallback interface.
 */
function instanceOfInvoiceCallback(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "externalId" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "merchantName" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "created" in value;
    isInstance = isInstance && "updated" in value;
    isInstance = isInstance && "currency" in value;
    return isInstance;
}
exports.instanceOfInvoiceCallback = instanceOfInvoiceCallback;
function InvoiceCallbackFromJSON(json) {
    return InvoiceCallbackFromJSONTyped(json, false);
}
exports.InvoiceCallbackFromJSON = InvoiceCallbackFromJSON;
function InvoiceCallbackFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'externalId': json['external_id'],
        'userId': json['user_id'],
        'status': json['status'],
        'merchantName': json['merchant_name'],
        'amount': json['amount'],
        'payerEmail': !(0, runtime_1.exists)(json, 'payer_email') ? undefined : json['payer_email'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'paidAmount': !(0, runtime_1.exists)(json, 'paid_amount') ? undefined : json['paid_amount'],
        'created': json['created'],
        'updated': json['updated'],
        'currency': json['currency'],
        'paidAt': !(0, runtime_1.exists)(json, 'paid_at') ? undefined : json['paid_at'],
        'paymentMethod': !(0, runtime_1.exists)(json, 'payment_method') ? undefined : json['payment_method'],
        'paymentChannel': !(0, runtime_1.exists)(json, 'payment_channel') ? undefined : json['payment_channel'],
        'paymentDestination': !(0, runtime_1.exists)(json, 'payment_destination') ? undefined : json['payment_destination'],
        'paymentDetails': !(0, runtime_1.exists)(json, 'payment_details') ? undefined : (0, PaymentDetails_1.PaymentDetailsFromJSON)(json['payment_details']),
        'paymentId': !(0, runtime_1.exists)(json, 'payment_id') ? undefined : json['payment_id'],
        'successRedirectUrl': !(0, runtime_1.exists)(json, 'success_redirect_url') ? undefined : json['success_redirect_url'],
        'failureRedirectUrl': !(0, runtime_1.exists)(json, 'failure_redirect_url') ? undefined : json['failure_redirect_url'],
        'creditCardChargeId': !(0, runtime_1.exists)(json, 'credit_card_charge_id') ? undefined : json['credit_card_charge_id'],
        'items': !(0, runtime_1.exists)(json, 'items') ? undefined : (json['items'].map(InvoiceCallbackItem_1.InvoiceCallbackItemFromJSON)),
        'fees': !(0, runtime_1.exists)(json, 'fees') ? undefined : (json['fees'].map(InvoiceFee_1.InvoiceFeeFromJSON)),
        'shouldAuthenticateCreditCard': !(0, runtime_1.exists)(json, 'should_authenticate_credit_card') ? undefined : json['should_authenticate_credit_card'],
        'bankCode': !(0, runtime_1.exists)(json, 'bank_code') ? undefined : json['bank_code'],
        'ewalletType': !(0, runtime_1.exists)(json, 'ewallet_type') ? undefined : json['ewallet_type'],
        'onDemandLink': !(0, runtime_1.exists)(json, 'on_demand_link') ? undefined : json['on_demand_link'],
        'recurringPaymentId': !(0, runtime_1.exists)(json, 'recurring_payment_id') ? undefined : json['recurring_payment_id'],
    };
}
exports.InvoiceCallbackFromJSONTyped = InvoiceCallbackFromJSONTyped;
function InvoiceCallbackToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'external_id': value.externalId,
        'user_id': value.userId,
        'status': value.status,
        'merchant_name': value.merchantName,
        'amount': value.amount,
        'payer_email': value.payerEmail,
        'description': value.description,
        'paid_amount': value.paidAmount,
        'created': value.created,
        'updated': value.updated,
        'currency': value.currency,
        'paid_at': value.paidAt,
        'payment_method': value.paymentMethod,
        'payment_channel': value.paymentChannel,
        'payment_destination': value.paymentDestination,
        'payment_details': (0, PaymentDetails_1.PaymentDetailsToJSON)(value.paymentDetails),
        'payment_id': value.paymentId,
        'success_redirect_url': value.successRedirectUrl,
        'failure_redirect_url': value.failureRedirectUrl,
        'credit_card_charge_id': value.creditCardChargeId,
        'items': value.items === undefined ? undefined : (value.items.map(InvoiceCallbackItem_1.InvoiceCallbackItemToJSON)),
        'fees': value.fees === undefined ? undefined : (value.fees.map(InvoiceFee_1.InvoiceFeeToJSON)),
        'should_authenticate_credit_card': value.shouldAuthenticateCreditCard,
        'bank_code': value.bankCode,
        'ewallet_type': value.ewalletType,
        'on_demand_link': value.onDemandLink,
        'recurring_payment_id': value.recurringPaymentId,
    };
}
exports.InvoiceCallbackToJSON = InvoiceCallbackToJSON;
