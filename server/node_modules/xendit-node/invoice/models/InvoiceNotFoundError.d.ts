/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
/**
 * Response definition for a 404 Not Found error when creating an invoice.
 * @export
 * @interface InvoiceNotFoundError
 */
export interface InvoiceNotFoundError {
    /**
     * The error code indicating the type of error that occurred.
     * @type {string}
     * @memberof InvoiceNotFoundError
     */
    errorCode: InvoiceNotFoundErrorErrorCodeEnum;
    /**
     * A human-readable error message that provides additional information about the error.
     * @type {string}
     * @memberof InvoiceNotFoundError
     */
    message: string;
}
/**
 * @export
 */
export declare const InvoiceNotFoundErrorErrorCodeEnum: {
    readonly CallbackVirtualAccountNotFoundError: "CALLBACK_VIRTUAL_ACCOUNT_NOT_FOUND_ERROR";
    readonly UniqueAccountNumberUnavailableError: "UNIQUE_ACCOUNT_NUMBER_UNAVAILABLE_ERROR";
    readonly PaymentCodeNotAvailableError: "PAYMENT_CODE_NOT_AVAILABLE_ERROR";
};
export type InvoiceNotFoundErrorErrorCodeEnum = typeof InvoiceNotFoundErrorErrorCodeEnum[keyof typeof InvoiceNotFoundErrorErrorCodeEnum];
/**
 * Check if a given object implements the InvoiceNotFoundError interface.
 */
export declare function instanceOfInvoiceNotFoundError(value: object): boolean;
export declare function InvoiceNotFoundErrorFromJSON(json: any): InvoiceNotFoundError;
export declare function InvoiceNotFoundErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceNotFoundError;
export declare function InvoiceNotFoundErrorToJSON(value?: InvoiceNotFoundError | null): any;
