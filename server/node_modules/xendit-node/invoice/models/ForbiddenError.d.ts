/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
/**
 * An error object used to indicate a 403 Forbidden response related to invoice operations.
 * @export
 * @interface ForbiddenError
 */
export interface ForbiddenError {
    /**
     * The specific error code indicating that access to the invoice operation is suspended.
     * @type {string}
     * @memberof ForbiddenError
     */
    errorCode: ForbiddenErrorErrorCodeEnum;
    /**
     * A human-readable error message providing additional context about the 403 Forbidden response.
     * @type {string}
     * @memberof ForbiddenError
     */
    message: string;
}
/**
 * @export
 */
export declare const ForbiddenErrorErrorCodeEnum: {
    readonly AccessSuspended: "ACCESS_SUSPENDED";
};
export type ForbiddenErrorErrorCodeEnum = typeof ForbiddenErrorErrorCodeEnum[keyof typeof ForbiddenErrorErrorCodeEnum];
/**
 * Check if a given object implements the ForbiddenError interface.
 */
export declare function instanceOfForbiddenError(value: object): boolean;
export declare function ForbiddenErrorFromJSON(json: any): ForbiddenError;
export declare function ForbiddenErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForbiddenError;
export declare function ForbiddenErrorToJSON(value?: ForbiddenError | null): any;
