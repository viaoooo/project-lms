"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerObjectToJSON = exports.CustomerObjectFromJSONTyped = exports.CustomerObjectFromJSON = exports.instanceOfCustomerObject = void 0;
const runtime_1 = require("../../runtime");
const AddressObject_1 = require("./AddressObject");
/**
 * Check if a given object implements the CustomerObject interface.
 */
function instanceOfCustomerObject(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCustomerObject = instanceOfCustomerObject;
function CustomerObjectFromJSON(json) {
    return CustomerObjectFromJSONTyped(json, false);
}
exports.CustomerObjectFromJSON = CustomerObjectFromJSON;
function CustomerObjectFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'phoneNumber': !(0, runtime_1.exists)(json, 'phone_number') ? undefined : json['phone_number'],
        'givenNames': !(0, runtime_1.exists)(json, 'given_names') ? undefined : json['given_names'],
        'surname': !(0, runtime_1.exists)(json, 'surname') ? undefined : json['surname'],
        'email': !(0, runtime_1.exists)(json, 'email') ? undefined : json['email'],
        'mobileNumber': !(0, runtime_1.exists)(json, 'mobile_number') ? undefined : json['mobile_number'],
        'customerId': !(0, runtime_1.exists)(json, 'customer_id') ? undefined : json['customer_id'],
        'addresses': !(0, runtime_1.exists)(json, 'addresses') ? undefined : (json['addresses'] === null ? null : json['addresses'].map(AddressObject_1.AddressObjectFromJSON)),
    };
}
exports.CustomerObjectFromJSONTyped = CustomerObjectFromJSONTyped;
function CustomerObjectToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'phone_number': value.phoneNumber,
        'given_names': value.givenNames,
        'surname': value.surname,
        'email': value.email,
        'mobile_number': value.mobileNumber,
        'customer_id': value.customerId,
        'addresses': value.addresses === undefined ? undefined : (value.addresses === null ? null : value.addresses.map(AddressObject_1.AddressObjectToJSON)),
    };
}
exports.CustomerObjectToJSON = CustomerObjectToJSON;
