"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BankToJSON = exports.BankFromJSONTyped = exports.BankFromJSON = exports.instanceOfBank = void 0;
const runtime_1 = require("../../runtime");
const AlternativeDisplayItem_1 = require("./AlternativeDisplayItem");
const BankCode_1 = require("./BankCode");
/**
 * Check if a given object implements the Bank interface.
 */
function instanceOfBank(value) {
    let isInstance = true;
    isInstance = isInstance && "bankCode" in value;
    isInstance = isInstance && "collectionType" in value;
    isInstance = isInstance && "accountHolderName" in value;
    return isInstance;
}
exports.instanceOfBank = instanceOfBank;
function BankFromJSON(json) {
    return BankFromJSONTyped(json, false);
}
exports.BankFromJSON = BankFromJSON;
function BankFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'bankCode': (0, BankCode_1.BankCodeFromJSON)(json['bank_code']),
        'collectionType': json['collection_type'],
        'bankBranch': !(0, runtime_1.exists)(json, 'bank_branch') ? undefined : json['bank_branch'],
        'bankAccountNumber': !(0, runtime_1.exists)(json, 'bank_account_number') ? undefined : json['bank_account_number'],
        'accountHolderName': json['account_holder_name'],
        'transferAmount': !(0, runtime_1.exists)(json, 'transfer_amount') ? undefined : json['transfer_amount'],
        'alternativeDisplays': !(0, runtime_1.exists)(json, 'alternative_displays') ? undefined : (json['alternative_displays'].map(AlternativeDisplayItem_1.AlternativeDisplayItemFromJSON)),
    };
}
exports.BankFromJSONTyped = BankFromJSONTyped;
function BankToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'bank_code': (0, BankCode_1.BankCodeToJSON)(value.bankCode),
        'collection_type': value.collectionType,
        'bank_branch': value.bankBranch,
        'bank_account_number': value.bankAccountNumber,
        'account_holder_name': value.accountHolderName,
        'transfer_amount': value.transferAmount,
        'alternative_displays': value.alternativeDisplays === undefined ? undefined : (value.alternativeDisplays.map(AlternativeDisplayItem_1.AlternativeDisplayItemToJSON)),
    };
}
exports.BankToJSON = BankToJSON;
