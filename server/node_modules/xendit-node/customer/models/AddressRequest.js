"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressRequestToJSON = exports.AddressRequestFromJSONTyped = exports.AddressRequestFromJSON = exports.instanceOfAddressRequest = void 0;
const runtime_1 = require("../../runtime");
const AddressStatus_1 = require("./AddressStatus");
/**
 * Check if a given object implements the AddressRequest interface.
 */
function instanceOfAddressRequest(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAddressRequest = instanceOfAddressRequest;
function AddressRequestFromJSON(json) {
    return AddressRequestFromJSONTyped(json, false);
}
exports.AddressRequestFromJSON = AddressRequestFromJSON;
function AddressRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'category': !(0, runtime_1.exists)(json, 'category') ? undefined : json['category'],
        'countryCode': !(0, runtime_1.exists)(json, 'country_code') ? undefined : json['country_code'],
        'provinceState': !(0, runtime_1.exists)(json, 'province_state') ? undefined : json['province_state'],
        'city': !(0, runtime_1.exists)(json, 'city') ? undefined : json['city'],
        'suburb': !(0, runtime_1.exists)(json, 'suburb') ? undefined : json['suburb'],
        'postalCode': !(0, runtime_1.exists)(json, 'postal_code') ? undefined : json['postal_code'],
        'line1': !(0, runtime_1.exists)(json, 'line_1') ? undefined : json['line_1'],
        'line2': !(0, runtime_1.exists)(json, 'line_2') ? undefined : json['line_2'],
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : (0, AddressStatus_1.AddressStatusFromJSON)(json['status']),
        'isPrimary': !(0, runtime_1.exists)(json, 'is_primary') ? undefined : json['is_primary'],
    };
}
exports.AddressRequestFromJSONTyped = AddressRequestFromJSONTyped;
function AddressRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'category': value.category,
        'country_code': value.countryCode,
        'province_state': value.provinceState,
        'city': value.city,
        'suburb': value.suburb,
        'postal_code': value.postalCode,
        'line_1': value.line1,
        'line_2': value.line2,
        'status': (0, AddressStatus_1.AddressStatusToJSON)(value.status),
        'is_primary': value.isPrimary,
    };
}
exports.AddressRequestToJSON = AddressRequestToJSON;
