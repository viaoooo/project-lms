/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
/**
 *
 * @export
 * @interface ResponseDataNotFound
 */
export interface ResponseDataNotFound {
    /**
     *
     * @type {string}
     * @memberof ResponseDataNotFound
     */
    errorCode?: ResponseDataNotFoundErrorCodeEnum;
    /**
     *
     * @type {any}
     * @memberof ResponseDataNotFound
     */
    message?: any | null;
}
/**
 * @export
 */
export declare const ResponseDataNotFoundErrorCodeEnum: {
    readonly DataNotFound: "DATA_NOT_FOUND";
    readonly EntityNotFoundError: "ENTITY_NOT_FOUND_ERROR";
    readonly ClientNotFoundError: "CLIENT_NOT_FOUND_ERROR";
};
export type ResponseDataNotFoundErrorCodeEnum = typeof ResponseDataNotFoundErrorCodeEnum[keyof typeof ResponseDataNotFoundErrorCodeEnum];
/**
 * Check if a given object implements the ResponseDataNotFound interface.
 */
export declare function instanceOfResponseDataNotFound(value: object): boolean;
export declare function ResponseDataNotFoundFromJSON(json: any): ResponseDataNotFound;
export declare function ResponseDataNotFoundFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseDataNotFound;
export declare function ResponseDataNotFoundToJSON(value?: ResponseDataNotFound | null): any;
