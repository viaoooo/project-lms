"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.KYCDocumentRequestToJSON = exports.KYCDocumentRequestFromJSONTyped = exports.KYCDocumentRequestFromJSON = exports.instanceOfKYCDocumentRequest = void 0;
const runtime_1 = require("../../runtime");
const KYCDocumentSubType_1 = require("./KYCDocumentSubType");
const KYCDocumentType_1 = require("./KYCDocumentType");
/**
 * Check if a given object implements the KYCDocumentRequest interface.
 */
function instanceOfKYCDocumentRequest(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfKYCDocumentRequest = instanceOfKYCDocumentRequest;
function KYCDocumentRequestFromJSON(json) {
    return KYCDocumentRequestFromJSONTyped(json, false);
}
exports.KYCDocumentRequestFromJSON = KYCDocumentRequestFromJSON;
function KYCDocumentRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'country': !(0, runtime_1.exists)(json, 'country') ? undefined : json['country'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : (0, KYCDocumentType_1.KYCDocumentTypeFromJSON)(json['type']),
        'subType': !(0, runtime_1.exists)(json, 'sub_type') ? undefined : (0, KYCDocumentSubType_1.KYCDocumentSubTypeFromJSON)(json['sub_type']),
        'documentName': !(0, runtime_1.exists)(json, 'document_name') ? undefined : json['document_name'],
        'documentNumber': !(0, runtime_1.exists)(json, 'document_number') ? undefined : json['document_number'],
        'expiresAt': !(0, runtime_1.exists)(json, 'expires_at') ? undefined : json['expires_at'],
        'holderName': !(0, runtime_1.exists)(json, 'holder_name') ? undefined : json['holder_name'],
        'documentImages': !(0, runtime_1.exists)(json, 'document_images') ? undefined : json['document_images'],
    };
}
exports.KYCDocumentRequestFromJSONTyped = KYCDocumentRequestFromJSONTyped;
function KYCDocumentRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'country': value.country,
        'type': (0, KYCDocumentType_1.KYCDocumentTypeToJSON)(value.type),
        'sub_type': (0, KYCDocumentSubType_1.KYCDocumentSubTypeToJSON)(value.subType),
        'document_name': value.documentName,
        'document_number': value.documentNumber,
        'expires_at': value.expiresAt,
        'holder_name': value.holderName,
        'document_images': value.documentImages,
    };
}
exports.KYCDocumentRequestToJSON = KYCDocumentRequestToJSON;
