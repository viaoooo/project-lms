"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityAccountResponseToJSON = exports.IdentityAccountResponseFromJSONTyped = exports.IdentityAccountResponseFromJSON = exports.instanceOfIdentityAccountResponse = exports.IdentityAccountResponseTypeEnum = void 0;
const runtime_1 = require("../../runtime");
const IdentityAccountResponseProperties_1 = require("./IdentityAccountResponseProperties");
/**
 * @export
 */
exports.IdentityAccountResponseTypeEnum = {
    BankAccount: 'BANK_ACCOUNT',
    Ewallet: 'EWALLET',
    CreditCard: 'CREDIT_CARD',
    Otc: 'OTC',
    QrCode: 'QR_CODE',
    CardlessCredit: 'CARDLESS_CREDIT'
};
/**
 * Check if a given object implements the IdentityAccountResponse interface.
 */
function instanceOfIdentityAccountResponse(value) {
    let isInstance = true;
    isInstance = isInstance && "company" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "country" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "properties" in value;
    return isInstance;
}
exports.instanceOfIdentityAccountResponse = instanceOfIdentityAccountResponse;
function IdentityAccountResponseFromJSON(json) {
    return IdentityAccountResponseFromJSONTyped(json, false);
}
exports.IdentityAccountResponseFromJSON = IdentityAccountResponseFromJSON;
function IdentityAccountResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'company': json['company'],
        'description': json['description'],
        'country': json['country'],
        'holderName': !(0, runtime_1.exists)(json, 'holder_name') ? undefined : json['holder_name'],
        'type': json['type'],
        'properties': (0, IdentityAccountResponseProperties_1.IdentityAccountResponsePropertiesFromJSON)(json['properties']),
        'created': !(0, runtime_1.exists)(json, 'created') ? undefined : (new Date(json['created'])),
    };
}
exports.IdentityAccountResponseFromJSONTyped = IdentityAccountResponseFromJSONTyped;
function IdentityAccountResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'code': value.code,
        'company': value.company,
        'description': value.description,
        'country': value.country,
        'holder_name': value.holderName,
        'type': value.type,
        'properties': (0, IdentityAccountResponseProperties_1.IdentityAccountResponsePropertiesToJSON)(value.properties),
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
    };
}
exports.IdentityAccountResponseToJSON = IdentityAccountResponseToJSON;
