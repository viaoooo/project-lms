/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
import type { AddressStatus } from './AddressStatus';
/**
 *
 * @export
 * @interface Address
 */
export interface Address {
    /**
     *
     * @type {string}
     * @memberof Address
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    category: string | null;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    country: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    provinceState: string | null;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    city: string | null;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    postalCode: string | null;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    streetLine1: string | null;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    streetLine2: string | null;
    /**
     *
     * @type {AddressStatus}
     * @memberof Address
     */
    status?: AddressStatus | null;
    /**
     *
     * @type {boolean}
     * @memberof Address
     */
    isPrimary: boolean | null;
    /**
     *
     * @type {object}
     * @memberof Address
     */
    meta?: object | null;
    /**
     *
     * @type {Date}
     * @memberof Address
     */
    created?: Date;
    /**
     *
     * @type {Date}
     * @memberof Address
     */
    updated?: Date;
}
/**
 * Check if a given object implements the Address interface.
 */
export declare function instanceOfAddress(value: object): boolean;
export declare function AddressFromJSON(json: any): Address;
export declare function AddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): Address;
export declare function AddressToJSON(value?: Address | null): any;
